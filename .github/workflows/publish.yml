name: Publish Package

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Is this a dry run. If so no package will be published.'
        type: boolean
        required: true
  workflow_call:
    inputs:
      dry_run:
        description: 'Is this a dry run. If so no package will be published.'
        type: boolean
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Needed if using OIDC to get release secrets.
      contents: write # Contents and pull-requests are for release-please to make releases.
      pull-requests: write

    steps:
      # - uses: launchdarkly/gh-actions/actions/release-secrets@release-secrets-v1.2.0
      #   if: ${{ needs.release-please.outputs.releases_created == 'true' }}
      #   name: Get secrets
      #   with:
      #     aws_assume_role: ${{ inputs.aws_role }}
      #     ssm_parameter_pairs: '/production/common/releasing/digicert/host = DIGICERT_HOST,
      #       /production/common/releasing/digicert/api_key = DIGICERT_API_KEY,
      #       /production/common/releasing/digicert/client_cert_file_b64 = DIGICERT_CLIENT_CERT_FILE_B64,
      #       /production/common/releasing/digicert/client_cert_password = DIGICERT_CLIENT_CERT_PASSWORD,
      #       /production/common/releasing/digicert/code_signing_cert_sha1_hash = DIGICERT_CODE_SIGNING_CERT_SHA1_HASH,
      #       /production/common/releasing/nuget/api_key = NUGET_API_KEY'
      #     s3_path_pairs: 'launchdarkly-releaser/dotnet/LaunchDarkly.snk = LaunchDarkly.snk'

      - name: Build Release
        uses: ./.github/actions/build-release

      - name: Build Documentation
        uses: ./.github/actions/build-docs

      - name: Sign DLLs
        uses: launchdarkly/gh-actions/actions/sign-dlls@sign-dlls-v1.0.0
        with:
          build_configuration_path: ./src/LaunchDarkly.Logging.Microsoft/bin/Release
          dll_name: LaunchDarkly.Logging.Microsoft.dll

      - name: Publish Nupkg
        uses: ./.github/actions/publish
        with:
          dry_run: ${{ inputs.dry_run }}

      - name: Publish Documentation
        uses: ./.github/actions/publish-docs
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
